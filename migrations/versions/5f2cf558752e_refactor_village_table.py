"""refactor village table

Revision ID: 5f2cf558752e
Revises: 0591eed58892
Create Date: 2017-08-15 16:30:53.380326

"""

# revision identifiers, used by Alembic.
revision = '5f2cf558752e'
down_revision = '0591eed58892'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('village', sa.Column('act_stock', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('actlevels', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('actprice', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('addedby', sa.Integer(), nullable=True))
    op.add_column('village', sa.Column('airtel_signal', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('area_chief_name', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('area_chief_phone', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('brac_operating', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('chvs_trained', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('client_time', sa.Numeric(), nullable=True))
    op.add_column('village', sa.Column('comment', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('community_unit_id', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('country', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('county', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('date_added', sa.DateTime(), nullable=True))
    op.add_column('village', sa.Column('distancetobranch', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('distancetomainroad', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('distancetonearesthealthfacility', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('district', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('economic_status', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('estimatedpopulationdensity', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('largesupermarket', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('link_facility_id', sa.String(length=64), nullable=True))
    op.add_column('village', sa.Column('mapping_id', sa.String(length=64), nullable=True))
    op.add_column('village', sa.Column('mohpoplationdensity', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('mrdtlevels', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('mrdtprice', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('mtn_signal', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('name_of_distibutors', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('nameofngodoingiccm', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('nameofngodoingmhealth', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('ngodoingiccm', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('ngodoingmhealth', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('ngosgivingfreedrugs', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('noofhouseholds', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('number_of_factories', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('orange_signal', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('parish_id', sa.String(length=64), nullable=True))
    op.add_column('village', sa.Column('presenceofdistibutors', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('presenceofestates', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('presenceofhostels', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('privatefacilityforact', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('privatefacilityformrdt', sa.Text(), nullable=True))
    op.add_column('village', sa.Column('safaricom_signal', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('sub_county_id', sa.String(length=65), nullable=True))
    op.add_column('village', sa.Column('synced', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('tradermarket', sa.Integer(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('transportcost', sa.Float(), server_default=sa.text(u"'0'"), nullable=False))
    op.add_column('village', sa.Column('village_name', sa.String(length=64), nullable=True))
    op.add_column('village', sa.Column('ward', sa.String(length=65), nullable=True))
    op.alter_column(u'village', 'id',
                    existing_type=sa.INTEGER(),
                    type_=sa.String(length=64),
                    nullable=False)
    op.alter_column('village', 'lat',
               existing_type=sa.VARCHAR(length=45),
               type_=sa.Float(),
               server_default=sa.text(u"'0'"),
               nullable=False)
    op.alter_column('village', 'lon',
               existing_type=sa.VARCHAR(length=45),
               type_=sa.Float(),
               server_default=sa.text(u"'0'"),
               nullable=False)
    op.create_index(op.f('ix_village_addedby'), 'village', ['addedby'], unique=False)
    op.create_index(op.f('ix_village_community_unit_id'), 'village', ['community_unit_id'], unique=False)
    op.create_index(op.f('ix_village_link_facility_id'), 'village', ['link_facility_id'], unique=False)
    op.create_index(op.f('ix_village_mapping_id'), 'village', ['mapping_id'], unique=False)
    op.create_index(op.f('ix_village_parish_id'), 'village', ['parish_id'], unique=False)
    op.drop_index('ix_village_location_id', table_name='village')
    op.drop_constraint(u'village_location_id_fkey', 'village', type_='foreignkey')
    op.create_foreign_key(None, 'village', 'users', ['addedby'], ['id'])
    op.create_foreign_key(None, 'village', 'parish', ['parish_id'], ['id'])
    op.create_foreign_key(None, 'village', 'mapping', ['mapping_id'], ['id'])
    op.create_foreign_key(None, 'village', 'community_unit', ['community_unit_id'], ['id'])
    op.create_foreign_key(None, 'village', 'link_facility', ['link_facility_id'], ['id'])
    op.create_foreign_key(None, 'partner_cu', 'village', ['village_id'], ['id'])
    op.drop_column('village', 'location_id')
    op.drop_column('village', 'name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('village', sa.Column('name', sa.VARCHAR(length=65), autoincrement=False, nullable=False))
    op.add_column('village', sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'village', type_='foreignkey')
    op.drop_constraint(None, 'village', type_='foreignkey')
    op.drop_constraint(None, 'village', type_='foreignkey')
    op.drop_constraint(None, 'village', type_='foreignkey')
    op.drop_constraint(None, 'village', type_='foreignkey')
    op.create_foreign_key(u'village_location_id_fkey', 'village', 'location', ['location_id'], ['id'])
    op.create_index('ix_village_location_id', 'village', ['location_id'], unique=False)
    op.drop_index(op.f('ix_village_parish_id'), table_name='village')
    op.drop_index(op.f('ix_village_mapping_id'), table_name='village')
    op.drop_index(op.f('ix_village_link_facility_id'), table_name='village')
    op.drop_index(op.f('ix_village_community_unit_id'), table_name='village')
    op.drop_index(op.f('ix_village_addedby'), table_name='village')
    op.alter_column('village', 'lon',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.alter_column('village', 'lat',
               existing_type=sa.VARCHAR(length=45),
               nullable=True)
    op.drop_column('village', 'ward')
    op.drop_column('village', 'village_name')
    op.drop_column('village', 'transportcost')
    op.drop_column('village', 'tradermarket')
    op.drop_column('village', 'synced')
    op.drop_column('village', 'sub_county_id')
    op.drop_column('village', 'safaricom_signal')
    op.drop_column('village', 'privatefacilityformrdt')
    op.drop_column('village', 'privatefacilityforact')
    op.drop_column('village', 'presenceofhostels')
    op.drop_column('village', 'presenceofestates')
    op.drop_column('village', 'presenceofdistibutors')
    op.drop_column('village', 'parish_id')
    op.drop_column('village', 'orange_signal')
    op.drop_column('village', 'number_of_factories')
    op.drop_column('village', 'noofhouseholds')
    op.drop_column('village', 'ngosgivingfreedrugs')
    op.drop_column('village', 'ngodoingmhealth')
    op.drop_column('village', 'ngodoingiccm')
    op.drop_column('village', 'nameofngodoingmhealth')
    op.drop_column('village', 'nameofngodoingiccm')
    op.drop_column('village', 'name_of_distibutors')
    op.drop_column('village', 'mtn_signal')
    op.drop_column('village', 'mrdtprice')
    op.drop_column('village', 'mrdtlevels')
    op.drop_column('village', 'mohpoplationdensity')
    op.drop_column('village', 'mapping_id')
    op.drop_column('village', 'link_facility_id')
    op.drop_column('village', 'largesupermarket')
    op.drop_column('village', 'estimatedpopulationdensity')
    op.drop_column('village', 'economic_status')
    op.drop_column('village', 'district')
    op.drop_column('village', 'distancetonearesthealthfacility')
    op.drop_column('village', 'distancetomainroad')
    op.drop_column('village', 'distancetobranch')
    op.drop_column('village', 'date_added')
    op.drop_column('village', 'county')
    op.drop_column('village', 'country')
    op.drop_column('village', 'community_unit_id')
    op.drop_column('village', 'comment')
    op.drop_column('village', 'client_time')
    op.drop_column('village', 'chvs_trained')
    op.drop_column('village', 'brac_operating')
    op.drop_column('village', 'area_chief_phone')
    op.drop_column('village', 'area_chief_name')
    op.drop_column('village', 'airtel_signal')
    op.drop_column('village', 'addedby')
    op.drop_column('village', 'actprice')
    op.drop_column('village', 'actlevels')
    op.drop_column('village', 'act_stock')
    op.create_index('ix_subcounty_mappingId', 'subcounty', ['mappingId'], unique=False)
    op.create_index('ix_subcounty_countyID', 'subcounty', ['countyID'], unique=False)
    op.drop_index(op.f('ix_subcounty_mappingId'), table_name='subcounty')
    op.drop_index(op.f('ix_subcounty_countyID'), table_name='subcounty')
    op.drop_constraint(None, 'partner_cu', type_='foreignkey')
    # ### end Alembic commands ###
